{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,QACpC,IAAIC,EAAa,EACbC,EAAY,EACZC,EAAc,EACdC,EAAW,EA6Bf,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,aAAY,KACNN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAGpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAG5BA,EAAM,G,CAtCbT,EAAKiB,iBAAiB,UAEtB,SAAuBC,GACrBA,EAAEC,iBACF,MAAQV,MAAAW,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAEK,cAAcC,SAChDrB,EAAasB,OAAOL,EAAMM,OAC1BtB,EAAYqB,OAAOJ,EAAKK,OACxBrB,EAAcoB,OAAOH,EAAOI,OAE5B,IAAK,IAAIC,EAAI,EAAGA,GAAKtB,EAAasB,GAAK,EACrCrB,EAAWH,EAAaC,GAAauB,EAAI,GACzCpB,EAAcoB,EAAGrB,GACdsB,MAAK,EAACpB,SAAEA,EAAQC,MAAEA,MAEjBoB,EAAA/B,GAASgC,OAAOC,QACd,uBAAqBvB,QAAiBC,MAAU,IAGnDuB,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MAElBoB,EAAA/B,GAASgC,OAAOG,QACd,sBAAoBzB,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('form');\nlet delayValue = 0;\nlet stepValue = 0;\nlet amountValue = 0;\nlet delayArg = 0;\n\nform.addEventListener('submit', onCallPromise);\n\nfunction onCallPromise(e) {\n  e.preventDefault();\n  const { delay, step, amount } = e.currentTarget.elements;\n  delayValue = Number(delay.value);\n  stepValue = Number(step.value);\n  amountValue = Number(amount.value);\n\n  for (let i = 1; i <= amountValue; i += 1) {\n    delayArg = delayValue + stepValue * (i - 1);\n    createPromise(i, delayArg)\n      .then(({ position, delay }) => {\n        // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        // console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setInterval(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n        // Fulfill\n      } else {\n        reject({ position, delay });\n        // Reject\n      }\n    }, delay);\n  });\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$delayValue","$47d4ff9957288465$var$stepValue","$47d4ff9957288465$var$amountValue","$47d4ff9957288465$var$delayArg","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setInterval","addEventListener","e","preventDefault","delay1","step","amount","currentTarget","elements","Number","value","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.761e7f24.js.map"}